name: Build and Push Docker Image with Auto Versioning

on:
  push:
    branches: [ main ]

jobs:
  build-and-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project with Maven
        run: mvn clean package -DskipTests

      - name: Get latest GitHub tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(git tag --sort=-v:refname | grep '^v' | head -n 1)
          echo "Latest tag: $TAG"
          if [[ -z "$TAG" ]]; then
            echo "tag=v1.0.0" >> $GITHUB_OUTPUT
          else
            IFS='.' read -r -a parts <<< "${TAG#v}"
            major="${parts[0]}"
            minor="${parts[1]}"
            patch="${parts[2]}"
            new_patch=$((patch + 1))
            new_tag="v${major}.${minor}.${new_patch}"
            echo "tag=$new_tag" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image (ARM64)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/userservice:${{ steps.get_tag.outputs.tag }}

      - name: Create GitHub Tag
        env: 
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.get_tag.outputs.tag }}
          git push origin ${{ steps.get_tag.outputs.tag }}
